Terry:help me label the table genrated by the code: ### Data Cleaning and Initial Observations
The raw data was initially fetched and then subjected to a systematic cleaning process to ensure data integrity for analysis (Please refer to appendix for details). After-cleaning, an initial exploration of the data was conducted below, providing some insight about how the dataset is looked like.

Table 1 presents a snippet of the cleaned dataset, showcasing the first few rows post-cleaning. The table provides a glimpse into the structured format of the data, ready for in-depth analysis.
```{r echo=FALSE}
knitr::kable(head(clean_subway_delay_data, 4))
```

ChatGPT: To label the table generated by the knitr::kable() function in R, you can use the caption argument within the function. Here's how you can modify the code snippet to label the table as "Table 1: Snippet of the Cleaned TTC Subway Delay Data":

Data Cleaning and Initial Observations
The raw data was initially fetched and then subjected to a systematic cleaning process to ensure data integrity for analysis (Please refer to the appendix for details). After the cleaning, an initial exploration of the data was conducted below, providing some insight about how the dataset looks.

Table 1 presents a snippet of the cleaned dataset, showcasing the first few rows post-cleaning. The table provides a glimpse into the structured format of the data, ready for in-depth analysis.

Terry: help me fix my reference to the figure: ### Analysis on subway delay based on day of the week 

```{r echo=FALSE}
#| label: fig-subway_delay_day
#| fig-cap: "Total minutes of subway delays categorized by days of the week"
# Order by day
clean_subway_delay_data$Day <- factor(clean_subway_delay_data$Day, 
                                levels = c("Monday", "Tuesday", "Wednesday", 
                                           "Thursday", "Friday", "Saturday", "Sunday"),
                                ordered = TRUE)

# Group and summarize the data to get total delays
total_delay_by_day <- clean_subway_delay_data %>%
  group_by(Day) %>%
  summarize(Total_Delay = sum(`Min Delay`, na.rm = TRUE)) 

# Plot the data
ggplot(total_delay_by_day, aes(x = Day, y = Total_Delay, fill = Day)) +
  geom_bar(stat = "identity") +
  labs(title = "Total TTC Subway Delays by Day of the Week (minutes)",
       x = "Day of the Week",
       y = "Total Delay (minutes)",
       fill = "Day of the Week")

```

From @fig-subway-delay-day for total minutes delay we can clearly see that weekdays experience significantly longer cumulative delay duration as compared to weekends. Notably, Monday stands out with the highest aggregate minutes of delay, suggesting a peak in delay occurrences at the start of the workweek. Conversely, Saturday is the day with the least total delay time, indicating a smoother operational flow during weekend services.

ChatGPT: In Quarto (formerly R Markdown), to reference a figure, you should use the syntax @fig:label, where label is the label you've given your figure in the code chunk options. From the provided script, it seems that you've labeled your figure as fig-subway_delay_day. Here's the correct way to reference it in your text:

markdown
Copy code
### Analysis on subway delay based on day of the week 

```{r echo=FALSE}
#| label: fig-subway-delay-day
#| fig-cap: "Total minutes of subway delays categorized by days of the week"
# Order by day
clean_subway_delay_data$Day <- factor(clean_subway_delay_data$Day, 
                                levels = c("Monday", "Tuesday", "Wednesday", 
                                           "Thursday", "Friday", "Saturday", "Sunday"),
                                ordered = TRUE)

# Group and summarize the data to get total delays
total_delay_by_day <- clean_subway_delay_data %>%
  group_by(Day) %>%
  summarize(Total_Delay = sum(`Min Delay`, na.rm = TRUE)) 

# Plot the data
ggplot(total_delay_by_day, aes(x = Day, y = Total_Delay, fill = Day)) +
  geom_bar(stat = "identity") +
  labs(title = "Total TTC Subway Delays by Day of the Week (minutes)",
       x = "Day of the Week",
       y = "Total Delay (minutes)",
       fill = "Day of the Week")

From Figure @fig:fig-subway-delay-day, we can clearly see that weekdays experience significantly longer cumulative delay duration as compared to weekends. Notably, Monday stands out with the highest aggregate minutes of delay, suggesting a peak in delay occurrences at the start of the workweek. Conversely, Saturday is the day with the least total delay time, indicating a smoother operational flow during weekend services.

Terry: Can you put the title a little bit above so I can have the table of content all on the first page: ---
title: "A Modest Proposal for Developing Better Experience with TTC Subway"
title-block-banner: true
#subtitle: "TBD"
abstract: "This study analyzes the 2023 TTC subway delay data from OpenDataToronto to uncover delay patterns across different days and lines. Key findings reveal significant variances in delay durations and frequencies, offering practical insights for commuters and transit authorities. The analysis highlights the need for targeted strategies to improve subway efficiency, particularly on the most affected lines. The aim for this study is to lead a better subway service, making everyday travel smoother for lots of people in Toronto."
thanks: "Code and data supporting this analysis is available at: https://github.com/TEJMaster/TTC-Subway-Delay-Analysis-2023.git"
author: "Terry Tu"
date: today
date-format: long
format: pdf
editor: visual
toc: true
number-sections: true
bibliography: references.bib
link-citations: true
---

ChatGPT: To adjust the spacing of elements on your title page in a Quarto (formerly known as R Markdown) document, you can use LaTeX commands in the YAML header to customize the PDF output. However, Quarto doesn't support direct LaTeX commands within the YAML front matter. Instead, you can include LaTeX commands in a separate .tex file and then include that in your YAML header under includes:.

Here's how to adjust the spacing for your title to try to fit the table of contents on the first page:

Create a separate .tex file (for example, header-includes.tex) with the following content:
latex
Copy code
\usepackage{titling}
\setlength{\droptitle}{-2em}  % This raises the title by 2em; adjust the value as needed
Include this .tex file in your YAML header under includes::
yaml
Copy code
---
title: "A Modest Proposal for Developing Better Experience with TTC Subway"
title-block-banner: true
abstract: "This study analyzes the 2023 TTC subway delay data from OpenDataToronto to uncover delay patterns across different days and lines. Significant variances in delay durations and frequencies offer practical insights for commuters and transit authorities. The analysis highlights the need for targeted strategies to improve subway efficiency, particularly on the most affected lines. The aim of this study is to lead to a better subway service, making everyday travel smoother for lots of people in Toronto."
thanks: "Code and data supporting this analysis are available at: https://github.com/TEJMaster/TTC-Subway-Delay-Analysis-2023.git"
author: "Terry Tu"
date: today
date-format: long
format: pdf
editor: visual
toc: true
number-sections: true
bibliography: references.bib
link-citations: true
includes:
  in-header: header-includes.tex
---
This will tell Quarto to adjust the title positioning as per the LaTeX command set in the header-includes.tex file. Adjust the \setlength{\droptitle}{-2em} value as needed to get the desired spacing. Please note that the actual adjustment might require some trial and error to get the spacing just right for your content.

Terry: for these 2 paragraphs can you be slightly more formal: For this project, first, I downloaded the data from OpenDataToronto [@rOpenDataToronto]. Then, I cleaned up the data to make sure everything was accurate and ready for analysis. After that, I used R, which is a tool for doing statistics, to analyze the data. I looked at which subway lines have the most delays, and I checked to see if there were certain days or times when delays happened more often. This helped me understand the patterns and figure out where the TTC might need to make some changes.

Here is a brief summary of the rest of this paper. In the Data section, I talk about the data I used and how I got it ready. Then, in the Analysis section, I show you what I found out about when and where the delays happen. Next, in the Discussion section, I talk about what all this means for the TTC and its riders, and I think about what could be better and what I might not have considered. Finally, I finish with the Conclusion section, where I sum up the main things I learned from this project. By digging into the data, I hope to help the TTC get better and make it easier for everyone in Toronto to get where they need to go.

ChatGPT: Certainly! Here are the revised paragraphs with a more formal tone:

For this project, the initial step involved the acquisition of delay data from the OpenDataToronto portal [@rOpenDataToronto]. Subsequently, I undertook a comprehensive data cleansing process to ensure the accuracy and integrity of the data prior to analysis. Utilizing R, a statistical computing tool, I conducted a detailed analysis of the data. This examination focused on identifying subway lines with frequent delays and determining the temporal patterns of these delays. The analysis was instrumental in discerning underlying patterns and identifying potential areas for operational improvements within the TTC.

The remainder of this paper is structured as follows: The Data section delineates the datasets utilized and the preparatory measures undertaken. The Analysis section presents the findings, elucidating the frequency and timing of the delays encountered. The subsequent Discussion section delves into the implications of these findings for the TTC and its commuters, contemplating possible enhancements and acknowledging the study's limitations. The paper culminates with the Conclusion section, which encapsulates the primary insights derived from this research. The overarching objective of this investigation is to contribute to the enhancement of the TTC's service, thereby facilitating more efficient transit for the residents of Toronto.

Terry: can you fix my discription to the bottom of the plot for this code: ### Analysis on subway delay based subway line

```{r fig-subway_delay_line_freq, fig.width=9, fig.height=8, echo=FALSE, fig.cap="Frequency of subway delays categorized by subway line"}
frequency_of_delays_by_line <- clean_subway_delay_data %>%
  filter(Line %in% c("BD", "YU", "SHP", "SRT")) %>%
  group_by(Line) %>%
  summarize(Delay_Frequency = n()) # Count the number of delay occurrences for each line


ggplot(frequency_of_delays_by_line, aes(x = Line, y = Delay_Frequency, fill = Line)) +
  geom_bar(stat = "identity") +
  labs(title = "Frequency of TTC Subway Delays by Line",
       x = "Subway Line",
       y = "Frequency of Delays",
       fill = "Subway Line") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, margin = margin(b = 10)), # Increase bottom margin
        axis.title.x = element_text(margin = margin(t = 5, b = 10)), 
        legend.position = "bottom") + 
  guides(fill=guide_legend(title=NULL))

```
#### List of TTC subway line codes and their corresponding full names
- YU: Yonge-University Line (Line 1)
- BD: Bloor-Danforth Line (Line 2)
- SRT: Scarborough RT Line (Line 3)
- SHP: Sheppard Line (Line 4)


The visualized data indicates a huge contrast in delay frequencies across different subway lines for the year 2023. Notably, certain lines such as '999' and 'BD Line 2' registered no delays, suggesting efficient operation or a lack of reporting. In contrast, other lines like 'SHP' and 'SRT' experienced a minimal number of delays, which could indicate isolated incidents or effective management of potential disruptions.

However, a significant concern is observed with the 'BD' (Bloor-Danforth) and 'YU' (Yonge-University) lines, which exhibited a substantially higher frequency of delays. This pattern highlights a critical area for operational focus. As a TTC subway manager, this insight necessitates an in-depth analysis of the causes behind the delays on these lines. Moreover, people taking these two lines are highly recommended to plan with extra time allowance in anticipation of the higher frequency of delays encountered on these routes. 

ChatGPT: To affix the description below the plot in a formal report, you can use the following approach:

Place the plot and its caption within a figure environment if you are using LaTeX to knit your document to PDF. This will ensure the plot and its description stay together.

Use the \caption{} and \label{} commands in LaTeX to provide a caption and a label for referencing.

Add any descriptive text immediately after the \caption{} command within the figure environment.

However, in a Quarto (formerly R Markdown) document, you would typically use the fig.cap chunk option to add a caption. The description you've provided can be placed in the text immediately following the chunk that generates the plot.

Here's how you can modify your Quarto chunk to include the description below the plot:

markdown
Copy code
### Analysis on Subway Delay Based on Subway Line

```{r fig-subway_delay_line_freq, fig.width=9, fig.height=8, echo=FALSE, fig.cap="Figure 3: Frequency of subway delays categorized by subway line"}
# Your R code for plotting
List of TTC Subway Line Codes and Their Corresponding Full Names
YU: Yonge-University Line (Line 1)
BD: Bloor-Danforth Line (Line 2)
SRT: Scarborough RT Line (Line 3)
SHP: Sheppard Line (Line 4)
The visualized data reveals significant discrepancies in the frequency of delays across the TTC subway lines in 2023. Notably, some lines such as '999' and 'BD Line 2' report no delays, which may indicate effective operations or a lack of incident data. Conversely, lines like 'SHP' and 'SRT' show only a minimal occurrence of delays, suggesting isolated events or proficient management in preventing widespread disruptions.

A significant concern arises with the 'BD' (Bloor-Danforth) and 'YU' (Yonge-University) lines, which demonstrate a markedly higher frequency of delays. This observation underscores the necessity for targeted operational improvements. For TTC management, these insights mandate a thorough investigation into the causal factors of delays on these lines. Commuters utilizing these routes are advised to allow for additional travel time due to the increased likelihood of encountering delays.

Terry: use cross reference to the figure 3 in the analysis and write the list in a better format: *List of TTC subway line codes and their corresponding full names*
- YU: Yonge-University Line (Line 1)
- BD: Bloor-Danforth Line (Line 2)
- SRT: Scarborough RT Line (Line 3)
- SHP: Sheppard Line (Line 4)

The visualized data indicates a huge contrast in delay frequencies across different subway lines for the year 2023. Notably, certain lines such as '999' and 'BD Line 2' registered no delays, suggesting efficient operation or a lack of reporting. In contrast, other lines like 'SHP' and 'SRT' experienced a minimal number of delays, which could indicate isolated incidents or effective management of potential disruptions.

However, a significant concern is observed with the 'BD' (Bloor-Danforth) and 'YU' (Yonge-University) lines, which exhibited a substantially higher frequency of delays. This pattern highlights a critical area for operational focus. As a TTC subway manager, this insight necessitates an in-depth analysis of the causes behind the delays on these lines. Moreover, people taking these two lines are highly recommended to plan with extra time allowance in anticipation of the higher frequency of delays encountered on these routes. 

ChatGPT: To cross-reference Figure 3 within the analysis section of your document and to format the list of subway line codes with full names, here is how you can structure the content:

markdown
Copy code
The visualized data, as shown in Figure 3, indicates a substantial contrast in delay frequencies across different subway lines for the year 2023. Lines labeled '999' and 'BD Line 2' are notable for having registered no delays, possibly reflecting efficient operations or gaps in data recording. Conversely, lines such as 'SHP' and 'SRT' report a minimal number of delays, suggesting either the occurrence of isolated incidents or the effectiveness of management strategies to mitigate disruptions.

However, there are pronounced concerns with the 'BD' (Bloor-Danforth) and 'YU' (Yonge-University) lines, both of which show a significantly higher frequency of delays. This observed pattern calls for targeted operational focus. As a manager of TTC's subway system, these findings warrant a comprehensive analysis to understand the underlying causes of these delays. Furthermore, commuters who frequent these lines may wish to factor in additional travel time in anticipation of potential delays.

**List of TTC Subway Line Codes and Their Corresponding Full Names:**
- **YU**: Yonge-University Line (Line 1)
- **BD**: Bloor-Danforth Line (Line 2)
- **SRT**: Scarborough RT Line (Line 3)
- **SHP**: Sheppard Line (Line 4)
When you knit the document, ensure you have a label for Figure 3 that matches the one you are referencing. If Figure 3 is the third figure in your document and you're using automatic numbering, the reference should work correctly. If you have manually labeled your figure using #| label: fig-line-delay, then you would reference it with @ref(fig-line-delay) in the text.

Remember to check the documentation for the version of Quarto (or R Markdown) you are using to ensure you have the correct syntax for cross-referencing figures. If there is still an issue, it might be due to a syntax error or a problem with the document's structure, and you might need to troubleshoot further or seek support from Quarto forums or help documents. 

Terry: help me rewrite this discription to the plot: From @fig-subway_delay_time_freq we can see there is a peak number of delays at 8 a.m. and 4-5 p.m.. This indicated a sign of rush hours, and the subway is more likely to get delayed in these times potentially due to the large number of passengers going on and off the subways. In other times the frequency of delays are similar i.e. around 300 times in this year for each hour. Also according to this schedule from TTC [@TTC], the TTC subway only operates from 6 a.m. to 2 a.m. therefore we don't get data from these hours. We got some data point from 2 a.m. and 5 a.m. potentially due to there are still unfinished or early started subway services. 

ChatGPT: Certainly! Here's a revised description for the plot:

The data illustrated in Figure 4 showcases the distribution of TTC subway delays throughout the day. Notably, there are significant spikes in the number of delays around 8 a.m. and again between 4 p.m. and 5 p.m., reflecting the typical rush hour periods when the subway system is under the most strain from high passenger volumes. Outside of these peak times, the frequency of delays appears relatively consistent, averaging approximately 300 instances per hour over the course of the year. It is important to note that the TTC subway's operational hours are from 6 a.m. to 2 a.m., as stated by the official TTC schedule [@TTC]. The occurrence of delays recorded outside these operational hours, specifically at 2 a.m. and between 5 a.m. to 6 a.m., may be attributed to late-night service extensions, early morning starts, or ongoing service from the previous day that has not been concluded before midnight.

Terry: Based on my 3 results: ### Analysis on subway delay based on day of the week 

From @fig-subway_delay_day, we can clearly see that weekdays experience significantly longer cumulative delay duration as compared to weekends. Notably, Monday stands out with the highest aggregate minutes of delay, suggesting a peak in delay occurrences at the start of the workweek. Conversely, Saturday is the day with the least total delay time, indicating a smoother operational flow during weekend services.

From @fig-subway_delay_day_freq the frequency analysis of delays corroborates the trend observed in total delay duration. Weekdays generally have a higher incidence of delays, with Friday leading in the number of reported delays. On the other hand, during Sunday the plot shows the least frequency of delays, aligning with the expected reduced demand for travel on the last day of the weekend.


These insights could serve as a cornerstone for targeted strategies aimed at improving service efficiency, such as enhanced resource allocation during identified peak times. Commuters might also benefit from planning their travel schedules around these insights to avoid potential delays. 

The data illustrated in @fig-subway_delay_time_freq showcases the distribution of TTC subway delays throughout the day. Notably, there are significant peaks in the number of delays around 8 a.m. and again between 4 p.m. and 5 p.m., reflecting the typical rush hour periods when the subway system is under the most strain from high passenger volumes. Moreover, the number of delays in the evening rush hour is much higher compared to moring rush hour, suggesting a greater crowd level. Outside of these peak times, the frequency of delays appears relatively consistent, averaging approximately 300 instances per hour over the course of the year. It is important to note that the TTC subway's operational hours are from 6 a.m. to 2 a.m., as stated by the official TTC schedule [@TTC]. The occurrence of delays recorded outside these operational hours, specifically at 2 a.m. and 5 a.m. to 6 a.m., may be attributed to late-night service extensions, early morning starts, or ongoing service from the previous day that has not been concluded after the end of service time. 

help me revise my conclusion: Based on the data from "ttc-subway-delay-data-2023", I have provided 2 suggestions. For commuters, especially those frequenting the more affected lines, and on weekdays it is prudent to anticipate potential delays and allocate additional time for travel. On the management side, the insights from this report should catalyze a thorough review of operational procedures and the implementation of strategic improvements to address the root causes of frequent delays.

Ultimately, the goal is to achieve a level of service that ensures efficiency, satisfaction, and the continued trust of the commuting public in the TTC subway system. This analysis lays the groundwork for the continuous improvement of Toronto's subway operations and the enhancement of the city's public transportation ecosystem.

ChatGPT: Based on the comprehensive analysis of the 2023 TTC subway delay data, this report has led to two primary recommendations. For commuters, particularly those who regularly use the heavily impacted lines during peak weekday hours, it is advisable to plan for potential delays by allowing for extra travel time. Such foresight can mitigate the inconvenience caused by unexpected waiting times.

From an operational perspective, the data presented herein should prompt an extensive evaluation of current TTC practices. There is a clear opportunity for management to refine operational strategies, focusing on peak times that have been identified as hotspots for delays. Addressing the fundamental issues contributing to frequent delays could significantly enhance service reliability.

The overarching aim is to elevate the level of service to one that not only meets the expectations for punctuality and efficiency but also fosters confidence among Toronto's commuters. By harnessing the insights from this analysis, there is potential to drive progressive changes within the TTC's subway operations, ultimately benefiting the broader public transportation network in Toronto. This study, therefore, not only sheds light on existing patterns of delay but also serves as a catalyst for ongoing enhancements to the city's transit infrastructure.

Terry: help me revise this: ### Rough Sketch of the Idea

ChatGPT: Please check the `/input/misc/Plan-Sketch.pdf` for my sketch of my brain storming for this project.
ChatGPT
Conceptual Outline
For a visual representation of the preliminary ideas and brainstorming conducted for this project, please refer to the file located at /input/misc/Plan-Sketch.pdf. This document contains a rough sketch that outlines the initial concepts and thought processes that have shaped the direction of this project. It serves as a foundational overview, capturing the essence of the project's vision and strategy in its nascent stages.

Terry: help me revise it: Please check the `/input/misc/Plan-Sketch.pdf` for my sketch of my brain storming. This document contains a rough sketch about the sample data set and an example of plot I can use for answer my research question using this data set.

ChatGPT: For an insight into the conceptual framework and visual planning of this project, please review the sketch available at /input/misc/Plan-Sketch.pdf. This document presents a preliminary sketch that encapsulates the brainstorming process, including a representation of the sample dataset and illustrative examples of plots. These elements collectively aim to address the research questions posited by this study, offering a glimpse into the methodological approach and analytical direction pursued.

Terry: Help me revise my appendix: ### Data Simulation 

For details on the simulated data set creation, please check the script located at `Script/00-simulate-data_data.R`. This script generates a simulated data set consisting of 1000 entries, representing hypothetical subway delay instances for the year 2023. The data set is been saved to `\input\data\simulate_subway_data.csv`. The data set includes the following columns:

- Date: The date of the delay, formatted as a date within the year 2023.
- Day: The day of the week on which the delay occurred.
- SubwayID: A unique identifier for the subway vehicle involved in the delay.
- Time: The time of day when the delay took place, formatted as 'HH:MM'.
- Delay_Durations: The length of the delay in minutes.

### Download Data from OpenDataToronto

For details about download the data set from OpenDataToronto, please check the script located at `Script/01_download_data.R`. This script retrieves the TTC Subway delay data for the year 2023 using the package called `opendatatoronto` [@rOpenDataToronto] and save to a file at `/inputs/data/subway_delay_data_2023.csv`.

### Data Cleaning Process

In preparing the data set for analysis, the data is been cleaned by removing all rows with 'na' for their 'Line' column, and their 'Line' column not in ["BD", "YU", "SHP", "SRT"] (the 4 subway lines in Toronto). This step ensures the accuracy and reliability of the subsequent analysis by excluding incomplete or irrelevant data points. For a detailed view of the cleaning procedure and the code used, please refer to the script located at `Script/02_cleanup_data.R` in the repository. The cleaned data set is saved to `/outputs/data/cleaned_subway_delay_data_2023.csv`

### Data Set Validity Testing

Once the data set has been cleaned, its integrity can be validated by executing the script located at scripts/03-test-data-validity.R. This script performs three crucial checks to ensure the data set's accuracy and consistency:

1. Year Consistency: Verifies that all entries in the 'Date' column correspond to the year 2023.
2. Minute Delay not Negative: Confirms that all values in the 'Min Delay' column are greater than or equal to zero, ensuring no negative delay times are recorded.
3. Line Validation: Ensures that the 'Line' column includes only the subway lines in Toronto: "BD" (Bloor-Danforth), "YU" (Yonge-University), "SHP" (Sheppard), and "SRT" (Scarborough RT).

After running this script, it's expected that the variables `test_year_2023`, `test_min_delay_non_negative`, and `test_line_inclusion` should all return TRUE, indicating that the data set meets the specified criteria for each test. If any of these checks fail, it would suggest discrepancies within the data set that may require further investigation or correction.

ChatGPT: Data Simulation
The simulated dataset, designed to mirror the structure of the actual TTC subway delay data, can be found at Script/00-simulate-data_data.R. This script meticulously generates a dataset of 1000 hypothetical delay instances, providing a sandbox environment for testing analytical methods. The dataset encompasses variables such as 'Date', 'Day', 'SubwayID', 'Time', and 'Delay_Durations', mimicking the real-world data structure.

Download Data from OpenDataToronto
The process and code for downloading the TTC Subway delay data for 2023 from OpenDataToronto are detailed in Script/01_download_data.R. This script demonstrates the use of the opendatatoronto package [@rOpenDataToronto] to efficiently fetch and store the data locally at /inputs/data/subway_delay_data_2023.csv, ensuring a seamless start to the data analysis workflow.

Data Cleaning Process
Data cleaning is a critical step in ensuring the accuracy and reliability of the analysis. The detailed procedure and the R script used for data cleaning are available in Script/02_cleanup_data.R. The script elucidates the steps taken to refine the dataset by filtering out incomplete records and focusing on relevant subway lines. The cleaned dataset is conveniently saved at /outputs/data/cleaned_subway_delay_data_2023.csv, ready for in-depth analysis.

Data Set Validity Testing
To affirm the integrity and consistency of the cleaned dataset, a series of validation tests are performed using the script scripts/03-test-data-validity.R. These tests include verifying the correctness of the 'Date' entries for the year 2023, ensuring non-negative values in the 'Min Delay' column, and validating the inclusion of only specified subway lines in the 'Line' column. Successful execution of this script, resulting in test_year_2023, test_min_delay_non_negative, and test_line_inclusion being TRUE, is a testament to the dataset's readiness for analysis.

vbnet
